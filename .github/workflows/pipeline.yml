name: Spring CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: lima2803/portifolio-app
  VERSION: 1.0.0

jobs:
  build-test-sonar:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn -B clean package -DskipTests

    - name: Run Tests
      run: mvn test

    - name: SonarCloud Analysis
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        extraProperties: |
          sonar.projectKey=GabrielLima2803_portifolio-backend
          sonar.organization=gabriellima2803


  build-docker-image:
    needs: build-test-sonar
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:latest
          ${{ env.IMAGE_NAME }}:${{ env.VERSION }}

  deploy-staging:
    needs: build-docker-image
    runs-on: ubuntu-latest
    environment: staging
    steps:
    - name: Deploy to Kubernetes
      uses: Azure/k8s-deploy@v4
      with:
        namespace: staging
        manifests: k8s/staging-deployment.yaml
        images: |
          ${{ env.IMAGE_NAME }}:${{ env.VERSION }}

  deploy-production:
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Approve Deployment
      uses: trstringer/manual-approval@v1
      with:
        secret: ${{ secrets.PRODUCTION_APPROVAL_TOKEN }}
        approvers: 'team-lead,devops'

    - name: Blue-Green Deployment
      uses: Azure/k8s-deploy@v4
      with:
        strategy: blue-green
        namespace: production
        manifests: k8s/production-deployment.yaml
        images: |
          ${{ env.IMAGE_NAME }}:${{ env.VERSION }}